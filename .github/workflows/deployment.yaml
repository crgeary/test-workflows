name: Deployment

on:
  push:

env:
  APP_ENV: "production"
  APP_NAME: "purple"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ env.APP_ENV }}
      app-name: ${{ env.APP_NAME }}
    steps:
      - run: |

  build-app:
    runs-on: ubuntu-latest
    needs: prepare
    permissions:
      packages: write
    outputs:
      docker_tags: ${{ steps.build.outputs.tags }}
      docker_digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: build
        uses: ./actions/docker-build
        with:
          app-env: ${{ needs.prepare.outputs.environment }}
          app-name: ${{ needs.prepare.outputs.app-name }}

  build-migrations:
    runs-on: ubuntu-latest
    needs: prepare
    permissions:
      packages: write
    outputs:
      docker_tags: ${{ steps.build.outputs.tags }}
      docker_digest: ${{ steps.build.outputs.digest }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: build
        uses: ./actions/docker-build
        with:
          app-env: ${{ needs.prepare.outputs.environment }}
          app-name: ${{ needs.prepare.outputs.app-name }}
          target: migrations

  scan:
    runs-on: ubuntu-latest
    needs:
      - prepare
      - build-app
    permissions:
      security-events: write
    steps:
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ needs.build-app.outputs.docker_tags }}
          format: "sarif"
          output: "trivy-${{ needs.prepare.outputs.environment }}-scan.sarif"
      - uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-${{ needs.prepare.outputs.environment }}-scan.sarif"

  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.prepare.outputs.app-name }}-${{ needs.prepare.outputs.environment }}
      url: https://${{ needs.prepare.outputs.app-name }}.${{ needs.prepare.outputs.environment }}.example.com
    needs:
      - prepare
      - build-app
      - build-migrations
    env:
      DOCKER_TAG: ${{ needs.build-app.outputs.docker_tags }}
      DOCKER_DIGEST: ${{ needs.build-app.outputs.docker_digest }}
      DOCKER_MIGRATIONS_TAG: ${{ needs.build-migrations.outputs.docker_tags }}
      DOCKER_MIGRATIONS_DIGEST: ${{ needs.build-migrations.outputs.docker_digest }}
      K8S_NAMESPACE: ${{ needs.prepare.outputs.app-name }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          bash scripts/deploy.sh
