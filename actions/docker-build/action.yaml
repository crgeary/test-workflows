name: "Docker Build"
inputs:
  app-name:
    required: true
  app-env:
    required: true
outputs:
  tags:
    value: ${{ steps.meta.outputs.tags }}
  digest:
    value: ${{ steps.build.outputs.digest }}
runs:
  using: "composite"
  steps:
    - id: buildx
      uses: docker/setup-buildx-action@v2
    - id: docker-cache
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ inputs.app-name }}-${{ inputs.app-env }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-${{ inputs.app-name }}-${{ inputs.app-env }}-
    - id: meta
      uses: docker/metadata-action@v4
      with:
        images: "ghcr.io/crgeary/w-${{ inputs.app-name }}"
        tags: |
          type=sha,enable=true,format=long
        labels: org.opencontainers.image.title=${{ inputs.app-name }}
          org.opencontainers.image.vendor=CrGeary
    - id: build
      uses: docker/build-push-action@v4
      with:
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        target: production
        build-args: |
          APP_NAME=${{ inputs.app-name }}
        push: true
        file: docker/Dockerfile
        context: .
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
